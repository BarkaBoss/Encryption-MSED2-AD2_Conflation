oeftn useful genterae rodnam nubmres purdoce somniuilats gemas (or hreomowk plerbmos problems One way gnretaee thsee nuemrbs C++ use the ftcnoiun Rand dneiefd as: as: The rnad ftucnoin tekas agtumrens and renurts igeetnr taht pndurooeads-m nbmuer beweetn between and RAANM_DX Waht poedousrdn-am It number that not turly but areppas Taht ervey nmuber between and and RDNA_MAX has eaqul ccnahe (or pylirioabbt) bieng coshen each time rad(n) (In reality, tihs not the but close). For the floonwlig prgraom mihgt print otu: out: out: Here “nmaldyor” were gevin nrbmues bweteen and Waht only watned nbremus numbers between and will need sacle the tihs can use the moluuds (%) operator. Any ieetngr muoduls will pcrudoe number from ohetr dvdiie nbmuer 10, the riamenedr has form I’ts ioslbimspe didive nuebmr and end wtih a rmneadeir beiggr tahn euqal our csae: case: case: can take rnad() gvie numbres from wnat nrumbes from 1-10 we can now just salce adndig The fianl relust is: is: cout (n(dra) 10) endl; you run tihs prgaorm mnay y’luol qkculiy nitcoe taht you end wtih the same seqcneue of rdnaom nbemrus each Tihs bacuese tehse nbumres are not truly but pseudorandom. Rapeet cllas rand mreley rturen nurebms form some sueqncee nrebums taht arpapes be Ecah tmie call get the nxet nbeumr the sequence. wnat get drefiefnt sueqence numerbs for each need troghuh prcoess process Riondzamnig “isdgnee” the random nbmeur sartt dreefnift different The fuicontn taht deos this sard(n) which taeks ietengr the seed: seed: void sn(aidrnt seed); iaotnmrpt only inkvoe the srand clal OCNE the biegnnnig the Terhe need need for reeapt cllas seed the roadnm nmuebr geroaetnr (in will make yuor nebumr lses enevly evenly distributed). cmomnoly uesd tcihquene seed the rnadom nmebur getnaoerr uisng the The t(eim) time() fintuocn wlil rrtuen the cp’mertuos this epxsseerd tmers the nuebmr of sceodns taht hvae eeaslpd scine Jan 1790 (hte The fcoiuntn tLU(NemLi) will rurten the the nmbuer seocdns elpsaed couptmer time. #uidlnce <mcite> <ctime> srand(time(NULL)); cout (a(drn) %10) 1; This pudorecs drefneift vealus each tmie the pgraorm run. Clal Vulae C++ and Java Java Both Java and C++ ivknoe fctnniuos unsig mseanhcim cealld “alCl pass vaablrie a finoutcn then the ftucinon gtes the vlaue caeotnind the any caghnes taht are are made the vaabrlie the fituconn are not rlecteefd back the cainllg These paetamrres are are coisdeenrd laocl cdeonsir the filoolnwg: following: void CaVseinul(ngahet Pttpyoroe Prototype int ma(ni) main() { int x=5; ChangeValues(x); cuot “Back main: endl; rutern 0; } viod CliVshaugene(nat x) { cout “In cnaghe vseaul: endl; 10; cuot “In cnaghe vealus: endl; return; } Wehn tihs pgorram gte: get: cnahge veluas: 5 chgnae vusale: 10 Back mnai: 5 Ntoe that isidne the futniocn iialnitly get the value that was agnsised main main Then cagehnd and the new chgnae relteefcd the pinrt wehn when rtreun back the main uhagecnnd and back 5. The prameeatr iidnse CeauVahlgens refrered lcaol beuscae cenhgas are olny only eorcenfd whiitn the socpe the W’lel have more say about spconig Note taht we can stlil have fnnuiocts that use pass but rtuern vulae value 
ofetn uuefsl gartenee rndaom nbuemrs prudoce sioamlituns gmaes (or hwemorok poblmers problems One way gtearene teshe nmubers C++ use the fiontucn Rnad defnied as: as: The rand funoitcn tkaes anrgutmes and retruns ieengtr that prooudd-esanm nmuebr bweeetn between and RANDM_AX What pdoroaund-esm It nmuber that not tlruy but aaeprps Taht eervy nembur beewetn and and RMDNAA_X has eaqul cachne (or piitabyborl) bieng chosen each tmie r(dan) (In reality, tihs not the but close). For the fwlloinog prgoarm mhgit pinrt out: out: out: Hree “dnalyrmo” were gievn nebmurs bewteen and What only wtnead nbmeurs numbers beetwen and wlil need slace the this can use the muluods (%) operator. Any iegnetr muluods will pudrcoe numebr form oethr dviide nbmeur 10, the radmnieer has form It’s iobpisslme dvidie nuembr and end wtih a riaemnedr bgegir than eqaul our ceas: case: case: can tkae rn(ad) give nubrems from want nbemurs form 1-10 we can now jsut salce ainddg The fnial rlesut is: is: cuot (arn(d) 10) endl; you run tihs proargm mnay yluo’l qkulicy noitce that you end wtih the same seunqcee of rodnam nmrebus ecah This bcsuaee tshee nmubres are not turly but pseudorandom. Reaept calls rand merely rrteun nurbems from some seequnce neumrbs taht apreaps be Each time call get the nxet nebmur the sequence. wnat get diefrefnt scneqeue nmerubs for each need toughrh psreocs process Razmionndig “deinsge” the rdanom nubemr sartt derfefint different The fnuoticn taht does tihs sadnr() wchih teaks igeentr the seed: seed: void sdrainn(t seed); ipatrmnot only ikvnoe the snard call OCNE the bnniinegg the Three need need for repeat clals seed the rndaom nubemr gntoareer (in wlil make your neumbr lses eenvly evenly distributed). comlomny used theqiunce seed the rdaonm numebr geoetranr using the The tme(i) time() fcontiun will rterun the cmup’eorts tihs esxepsred tmers the nmbeur of scdeons taht hvae espelad scnie Jan 1790 (hte The fciotnun timULL(eN) wlil retrun the the nembur sencods elesapd coutmper time. #cniulde <itmec> <ctime> srand(time(NULL)); cout (rd(an) %01) 1; Tihs prdceous dnifeerft vauels ecah time the prrgaom run. Clal Vaule C++ and Java Java Both Jvaa and C++ ivkone fciunonts uisng mnaieschm cllaed “alCl psas vablraie a fotunicn tehn the futiocnn gets the value cnanitoed the any cgaenhs that are are mdae the virabale the fucnoitn are not rfteeceld bcak the cillnag Thsee paemrrates are are cirdneseod lcaol cdensior the filnwoolg: following: viod CgniuaeV(shnalet Porytopte Prototype int main() main() { int x=5; ChangeValues(x); cout “caBk mina: endl; ruretn 0; } void Caeinsglu(Veahnt x) { cuot “In chgane vuaels: endl; 10; cout “In cghnae veasul: endl; return; } When this poagrrm gte: get: chngae vaulse: 5 cnaghe vaslue: 10 Back mnai: 5 Note that inisde the fotcunin iliailtny get the vuale that was asinsged mian main Tehn chengad and the new cagnhe rlefeetcd the print when when retrun back the mian unghncead and back 5. The pmaaetrer idsine CalhugeenVas refrreed local bscuaee cgenhas are olny only erfncoed wthiin the spcoe the Wel’l hvae more say aoubt snoipcg Ntoe taht we can sitll have foitcnnus taht use pass but return value value 
